{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst startButton = document.querySelector('[data-start]');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet countdownInterval;\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      if (selectedDates[0] < new Date()) {\n          alert(\"Please choose a date in the future\");\n          startButton.disabled = true;\n      } else {\n          userSelectedDate = selectedDates[0];\n          startButton.disabled = false;\n      }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options)\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true ;\n  document.getElementById('datetime-picker').disabled = true ;\n\n  startCountdown() ;\n}) ;\n\nfunction startCountdown() {\n  countdownInterval = setInterval(() => {\n    const currentTime = new Date();\n    const timeDiff = userSelectedDate - currentTime ;\n\n    if (timeDiff < 0) {\n      clearInterval(countdownInterval)\n      alert(\"Countdown finished! ✅\")\n      startButton.disabled = true ;\n      updateTimerDisplay(0, 0, 0, 0);\n    } else {\n      const { days, hours, minutes, seconds } = convertMs(timeDiff);\n      updateTimerDisplay(days, hours, minutes, seconds);\n    }\n  })\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerDisplay (days, hours, minutes, seconds) {\n  daysSpan.textContent = addZero(days) ;\n  hoursSpan.textContent = addZero(hours) ;\n  minutesSpan.textContent = addZero(minutes) ;\n  secondsSpan.textContent = addZero(seconds) ;\n}\n\n\nfunction addZero(value) {\nreturn String(value).padStart(2, '0') ;\n}"],"names":["startButton","daysSpan","hoursSpan","minutesSpan","secondsSpan","countdownInterval","userSelectedDate","options","selectedDates","flatpickr","startCountdown","timeDiff","updateTimerDisplay","days","hours","minutes","seconds","convertMs","ms","addZero","value"],"mappings":"oFAKA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACfA,EAAc,CAAC,EAAI,IAAI,MACvB,MAAM,oCAAoC,EAC1CR,EAAY,SAAW,KAEvBM,EAAmBE,EAAc,CAAC,EAClCR,EAAY,SAAW,GAE9B,CACH,EAEAS,EAAU,mBAAoBF,CAAO,EAErCP,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvB,SAAS,eAAe,iBAAiB,EAAE,SAAW,GAEtDU,GACF,CAAC,EAED,SAASA,GAAiB,CACxBL,EAAoB,YAAY,IAAM,CAEpC,MAAMM,EAAWL,EADG,IAAI,KAGxB,GAAIK,EAAW,EACb,cAAcN,CAAiB,EAC/B,MAAM,uBAAuB,EAC7BL,EAAY,SAAW,GACvBY,EAAmB,EAAG,EAAG,EAAG,CAAC,MACxB,CACL,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAQ,EAC5DC,EAAmBC,EAAMC,EAAOC,EAASC,CAAO,CACjD,CACL,CAAG,CACH,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASJ,EAAoBC,EAAMC,EAAOC,EAASC,EAAS,CAC1Df,EAAS,YAAckB,EAAQN,CAAI,EACnCX,EAAU,YAAciB,EAAQL,CAAK,EACrCX,EAAY,YAAcgB,EAAQJ,CAAO,EACzCX,EAAY,YAAce,EAAQH,CAAO,CAC3C,CAGA,SAASG,EAAQC,EAAO,CACxB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACpC"}